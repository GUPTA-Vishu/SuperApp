{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovopc\\\\OneDrive\\\\Cuvette Course\\\\superapp\\\\superapp\\\\src\\\\Components\\\\ActionMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionMovies = ({\n  onDataReceived\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const url = \"https://imdb188.p.rapidapi.com/api/v1/searchIMDB?query=action\";\n      const options = {\n        method: \"GET\",\n        headers: {\n          \"X-RapidAPI-Key\": \"40a2f2dd5cmshf909a04db28de45p171433jsn3f3750550338\",\n          \"X-RapidAPI-Host\": \"imdb188.p.rapidapi.com\"\n        }\n      };\n      try {\n        const response = await fetch(url, options);\n        const data = await response.json();\n        setMovies(data.result);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  useEffect(() => {\n    onDataReceived(m);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Action Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.image,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionMovies, \"jPo7B09k0HHweWRYbpaxIdscit8=\");\n_c = ActionMovies;\nexport default ActionMovies;\nvar _c;\n$RefreshReg$(_c, \"ActionMovies\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ActionMovies","onDataReceived","_s","movies","setMovies","fetchMovies","url","options","method","headers","response","fetch","data","json","result","error","console","m","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","src","image","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/lenovopc/OneDrive/Cuvette Course/superapp/superapp/src/Components/ActionMovies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst ActionMovies = ({onDataReceived}) => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      const url =\r\n        \"https://imdb188.p.rapidapi.com/api/v1/searchIMDB?query=action\";\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"X-RapidAPI-Key\":\r\n            \"40a2f2dd5cmshf909a04db28de45p171433jsn3f3750550338\",\r\n          \"X-RapidAPI-Host\": \"imdb188.p.rapidapi.com\",\r\n        },\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(url, options);\r\n        const data = await response.json();\r\n        setMovies(data.result);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    onDataReceived(m)\r\n  })\r\n  return (\r\n    <div>\r\n      <h1>Action Movies</h1>\r\n      <ul>\r\n        {movies.map((movie, index) => (\r\n          <li key={index}>\r\n            <img src={movie.image} alt={movie.title} />\r\n            <p>{movie.title}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionMovies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,GAAG,GACP,+DAA+D;MACjE,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,gBAAgB,EACd,oDAAoD;UACtD,iBAAiB,EAAE;QACrB;MACF,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEC,OAAO,CAAC;QAC1C,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCT,SAAS,CAACQ,IAAI,CAACE,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDV,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAI;IACZK,cAAc,CAACgB,CAAC,CAAC;EACnB,CAAC,CAAC;EACF,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBvB,OAAA;MAAAmB,QAAA,EACGf,MAAM,CAACoB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB1B,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAK2B,GAAG,EAAEF,KAAK,CAACG,KAAM;UAACC,GAAG,EAAEJ,KAAK,CAACK;QAAM;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CvB,OAAA;UAAAmB,QAAA,EAAIM,KAAK,CAACK;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFbG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3CIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}