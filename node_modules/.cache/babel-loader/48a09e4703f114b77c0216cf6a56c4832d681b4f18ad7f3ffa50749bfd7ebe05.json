{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovopc\\\\OneDrive\\\\Cuvette Course\\\\superapp\\\\superapp\\\\src\\\\Components\\\\ActionMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '5ee10dc4';\nconst API_URL = `http://www.omdbapi.com/?apikey=${API_KEY}&s=`;\nconst MOVIES_PER_PAGE = 4; // Number of movies to load per page\n\nfunction MovieSearch() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const response = await fetch(`${API_URL}&page=${currentPage}`);\n        const data = await response.json();\n        if (data.Search) {\n          setMovies(prevMovies => [...prevMovies, ...data.Search]);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchMovies();\n  }, [currentPage]);\n  const loadMore = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OMDB Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.Year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMore,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSearch, \"qWDrfubeEmpJYZRWi+OFFQT4vCs=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_KEY","API_URL","MOVIES_PER_PAGE","MovieSearch","_s","movies","setMovies","currentPage","setCurrentPage","fetchMovies","response","fetch","data","json","Search","prevMovies","error","console","loadMore","prevPage","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","Title","Year","src","Poster","alt","imdbID","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lenovopc/OneDrive/Cuvette Course/superapp/superapp/src/Components/ActionMovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst API_KEY = '5ee10dc4';\r\nconst API_URL = `http://www.omdbapi.com/?apikey=${API_KEY}&s=`;\r\nconst MOVIES_PER_PAGE = 4; // Number of movies to load per page\r\n\r\nfunction MovieSearch() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      try {\r\n        const response = await fetch(`${API_URL}&page=${currentPage}`);\r\n        const data = await response.json();\r\n        if (data.Search) {\r\n          setMovies((prevMovies) => [...prevMovies, ...data.Search]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n\r\n    fetchMovies();\r\n  }, [currentPage]);\r\n\r\n  const loadMore = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>OMDB Movie List</h1>\r\n\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <li key={movie.imdbID}>\r\n            <h2>{movie.Title}</h2>\r\n            <p>{movie.Year}</p>\r\n            <img src={movie.Poster} alt={movie.Title} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button onClick={loadMore}>Load More</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,UAAU;AAC1B,MAAMC,OAAO,GAAI,kCAAiCD,OAAQ,KAAI;AAC9D,MAAME,eAAe,GAAG,CAAC,CAAC,CAAC;;AAE3B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,eAAeY,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,SAAQM,WAAY,EAAC,CAAC;QAC9D,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,MAAM,EAAE;UACfR,SAAS,CAAES,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE,GAAGH,IAAI,CAACE,MAAM,CAAC,CAAC;QAC5D;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IAEAP,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EAEjB,MAAMW,QAAQ,GAAGA,CAAA,KAAM;IACrBV,cAAc,CAAEW,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExBzB,OAAA;MAAAqB,QAAA,EACGf,MAAM,CAACoB,GAAG,CAAEC,KAAK,iBAChB3B,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAAqB,QAAA,EAAKM,KAAK,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBzB,OAAA;UAAAqB,QAAA,EAAIM,KAAK,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBzB,OAAA;UAAK8B,GAAG,EAAEH,KAAK,CAACI,MAAO;UAACC,GAAG,EAAEL,KAAK,CAACC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAHrCE,KAAK,CAACM,MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELzB,OAAA;MAAQkC,OAAO,EAAEf,QAAS;MAAAE,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACpB,EAAA,CAzCQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}