{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovopc\\\\OneDrive\\\\Cuvette Course\\\\superapp\\\\superapp\\\\src\\\\Components\\\\ActionMovies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'YOUR_OMDB_API_KEY';\nconst API_URL = `http://www.omdbapi.com/?apikey=${API_KEY}&t=`;\nfunction MovieSearch() {\n  _s();\n  const [movieData, setMovieData] = useState({});\n  const movieTitle = 'The Avengers'; // Replace this with the movie title you want to search for\n\n  useEffect(() => {\n    async function fetchMovieData() {\n      try {\n        const response = await fetch(`${API_URL}${encodeURIComponent(movieTitle)}`);\n        const data = await response.json();\n        setMovieData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchMovieData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"OMDB Movie Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), movieData.Title && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: movieData.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movieData.Plot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movieData.Poster,\n        alt: movieData.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieSearch, \"vMQNr7mseNs5Zg+oQG7HZ4mVo34=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","API_KEY","API_URL","MovieSearch","_s","movieData","setMovieData","movieTitle","fetchMovieData","response","fetch","encodeURIComponent","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Title","Plot","src","Poster","alt","_c","$RefreshReg$"],"sources":["C:/Users/lenovopc/OneDrive/Cuvette Course/superapp/superapp/src/Components/ActionMovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst API_KEY = 'YOUR_OMDB_API_KEY';\r\nconst API_URL = `http://www.omdbapi.com/?apikey=${API_KEY}&t=`;\r\n\r\nfunction MovieSearch() {\r\n  const [movieData, setMovieData] = useState({});\r\n  const movieTitle = 'The Avengers'; // Replace this with the movie title you want to search for\r\n\r\n  useEffect(() => {\r\n    async function fetchMovieData() {\r\n      try {\r\n        const response = await fetch(`${API_URL}${encodeURIComponent(movieTitle)}`);\r\n        const data = await response.json();\r\n        setMovieData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n\r\n    fetchMovieData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>OMDB Movie Information</h1>\r\n\r\n      {movieData.Title && (\r\n        <div>\r\n          <h2>{movieData.Title}</h2>\r\n          <p>{movieData.Plot}</p>\r\n          <img src={movieData.Poster} alt={movieData.Title} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,mBAAmB;AACnC,MAAMC,OAAO,GAAI,kCAAiCD,OAAQ,KAAI;AAE9D,SAASE,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAMU,UAAU,GAAG,cAAc,CAAC,CAAC;;EAEnCT,SAAS,CAAC,MAAM;IACd,eAAeU,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,OAAQ,GAAES,kBAAkB,CAACJ,UAAU,CAAE,EAAC,CAAC;QAC3E,MAAMK,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCP,YAAY,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IAEAN,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE9Bf,SAAS,CAACgB,KAAK,iBACdrB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAKX,SAAS,CAACgB;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BpB,OAAA;QAAAgB,QAAA,EAAIX,SAAS,CAACiB;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBpB,OAAA;QAAKuB,GAAG,EAAElB,SAAS,CAACmB,MAAO;QAACC,GAAG,EAAEpB,SAAS,CAACgB;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CA/BQD,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}