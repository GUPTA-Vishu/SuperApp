{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovopc\\\\OneDrive\\\\Cuvette Course\\\\superapp\\\\superapp\\\\src\\\\Components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Clear from \"./image/Clear.png\";\nimport Cloudy from \"./image/Cloudy.png\";\nimport LightRain from \"./image/LightRain.png\";\nimport PartlyCloud from \"./image/PartlyCloud.png\";\nimport speed from \"./image/speed.png\";\nimport Pressure from \"./image/Pressure.png\";\nimport Humidity from \"./image/Humidity.png\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = ({\n  formattedDate,\n  formattedFutureDateTime\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const apiKey = '16204f83111c4fed9e691403231408';\n  const city = 'Agra';\n  useEffect(() => {\n    fetch(`http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=no`).then(response => response.json()).then(data => setWeatherData(data)).catch(error => console.error('Error fetching weather data:', error));\n  }, []);\n  const weatherIcons = {\n    'Clear': 'Clear.png',\n    'Partly cloudy': 'PartlyCloud.png',\n    'Cloudy': 'Cloudy.png',\n    'Light rain': 'LightRain.png'\n    // Add more mappings as needed\n  };\n\n  const getWeatherIcon = condition => {\n    const iconFileName = weatherIcons[condition];\n    if (iconFileName) {\n      return `/src/Components/image/${iconFileName}`;\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Date\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", formattedFutureDateTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [weatherData.current.temp_c, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weatherData.current.pressure_mb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Pressure,\n            alt: \"not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", weatherData.current.condition.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getWeatherIcon(weatherData.current.condition.text),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weatherData.current.humidity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Humidity,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", weatherData.current.wind_kph]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: speed,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","Clear","Cloudy","LightRain","PartlyCloud","speed","Pressure","Humidity","jsxDEV","_jsxDEV","Weather","formattedDate","formattedFutureDateTime","_s","weatherData","setWeatherData","apiKey","city","fetch","then","response","json","data","catch","error","console","weatherIcons","getWeatherIcon","condition","iconFileName","children","className","fileName","_jsxFileName","lineNumber","columnNumber","current","temp_c","pressure_mb","src","alt","text","humidity","wind_kph","_c","$RefreshReg$"],"sources":["C:/Users/lenovopc/OneDrive/Cuvette Course/superapp/superapp/src/Components/Weather.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState ,useEffect} from \"react\";\r\nimport Clear from \"./image/Clear.png\";\r\nimport Cloudy from \"./image/Cloudy.png\";\r\nimport LightRain from \"./image/LightRain.png\";\r\nimport PartlyCloud from \"./image/PartlyCloud.png\";\r\nimport speed from \"./image/speed.png\";\r\nimport Pressure from \"./image/Pressure.png\";\r\nimport Humidity from \"./image/Humidity.png\";\r\n\r\nimport \"./Weather.css\";\r\n\r\n\r\n\r\n\r\nconst Weather = ({ formattedDate, formattedFutureDateTime }) => {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const apiKey = '16204f83111c4fed9e691403231408';\r\n  const city = 'Agra'; \r\n\r\n  useEffect(() => {\r\n    fetch(`http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${city}&aqi=no`)\r\n      .then(response => response.json())\r\n      .then(data => setWeatherData(data))\r\n      .catch(error => console.error('Error fetching weather data:', error));\r\n  }, []);\r\n\r\n\r\n  const weatherIcons = {\r\n    'Clear': 'Clear.png',\r\n    'Partly cloudy': 'PartlyCloud.png',\r\n    'Cloudy': 'Cloudy.png',\r\n    'Light rain': 'LightRain.png',\r\n    // Add more mappings as needed\r\n  };\r\n\r\n  const getWeatherIcon = condition => {\r\n    const iconFileName = weatherIcons[condition];\r\n    if (iconFileName) {\r\n      return `/src/Components/image/${iconFileName}`;\r\n    }\r\n    return null;\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"Date\">\r\n        <p className=\"\">{formattedDate}</p>\r\n        <p> {formattedFutureDateTime}</p>\r\n      </div>\r\n      <div>\r\n      {weatherData && (\r\n        <div className=\"back\">\r\n        <div>\r\n          \r\n          <p>{weatherData.current.temp_c}Â°C</p>\r\n          <p>{weatherData.current.pressure_mb}</p>\r\n          <img src={Pressure}alt=\"not found\" />\r\n          </div>\r\n          <div>\r\n\r\n          <p> {weatherData.current.condition.text}</p>\r\n          <img src={getWeatherIcon(weatherData.current.condition.text)} alt=\"\" />\r\n          </div>\r\n\r\n        <p>{weatherData.current.humidity}</p>\r\n        <img src={Humidity} alt=\"\" />\r\n        <p> {weatherData.current.wind_kph}</p>\r\n        <img src={speed} alt=\"\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAwB,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMiB,MAAM,GAAG,gCAAgC;EAC/C,MAAMC,IAAI,GAAG,MAAM;EAEnBjB,SAAS,CAAC,MAAM;IACdkB,KAAK,CAAE,iDAAgDF,MAAO,MAAKC,IAAK,SAAQ,CAAC,CAC9EE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,cAAc,CAACO,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,EAAE,CAAC;EAGN,MAAME,YAAY,GAAG;IACnB,OAAO,EAAE,WAAW;IACpB,eAAe,EAAE,iBAAiB;IAClC,QAAQ,EAAE,YAAY;IACtB,YAAY,EAAE;IACd;EACF,CAAC;;EAED,MAAMC,cAAc,GAAGC,SAAS,IAAI;IAClC,MAAMC,YAAY,GAAGH,YAAY,CAACE,SAAS,CAAC;IAC5C,IAAIC,YAAY,EAAE;MAChB,OAAQ,yBAAwBA,YAAa,EAAC;IAChD;IACA,OAAO,IAAI;EACb,CAAC;EACD,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAKsB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBrB,OAAA;QAAGsB,SAAS,EAAC,EAAE;QAAAD,QAAA,EAAEnB;MAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC1B,OAAA;QAAAqB,QAAA,GAAG,GAAC,EAAClB,uBAAuB;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACN1B,OAAA;MAAAqB,QAAA,EACChB,WAAW,iBACVL,OAAA;QAAKsB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACrBrB,OAAA;UAAAqB,QAAA,gBAEErB,OAAA;YAAAqB,QAAA,GAAIhB,WAAW,CAACsB,OAAO,CAACC,MAAM,EAAC,OAAE;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACrC1B,OAAA;YAAAqB,QAAA,EAAIhB,WAAW,CAACsB,OAAO,CAACE;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxC1B,OAAA;YAAK8B,GAAG,EAAEjC,QAAS;YAAAkC,GAAG,EAAC;UAAW;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACN1B,OAAA;UAAAqB,QAAA,gBAEArB,OAAA;YAAAqB,QAAA,GAAG,GAAC,EAAChB,WAAW,CAACsB,OAAO,CAACR,SAAS,CAACa,IAAI;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5C1B,OAAA;YAAK8B,GAAG,EAAEZ,cAAc,CAACb,WAAW,CAACsB,OAAO,CAACR,SAAS,CAACa,IAAI,CAAE;YAACD,GAAG,EAAC;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eAER1B,OAAA;UAAAqB,QAAA,EAAIhB,WAAW,CAACsB,OAAO,CAACM;QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrC1B,OAAA;UAAK8B,GAAG,EAAEhC,QAAS;UAACiC,GAAG,EAAC;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7B1B,OAAA;UAAAqB,QAAA,GAAG,GAAC,EAAChB,WAAW,CAACsB,OAAO,CAACO,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtC1B,OAAA;UAAK8B,GAAG,EAAElC,KAAM;UAACmC,GAAG,EAAC;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1DIH,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA4Db,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}